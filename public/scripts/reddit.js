// Generated by CoffeeScript 1.4.0
(function() {
  var RedditQuery, RedditSearch, RedditSubreddit,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  RedditQuery = (function() {

    function RedditQuery() {}

    RedditQuery.prototype.queryEndpoint = function(endpoint, data, callback) {
      return $.ajax(endpoint, {
        dataType: 'jsonp',
        jsonp: 'jsonp',
        data: data,
        success: function(data, textStatus, jqXHR) {
          if (data.kind === "Listing") {
            if (callback != null) {
              return callback(data);
            } else {
              return console.log(data);
            }
          } else {
            return console.log("API didn't return listing");
          }
        }
      });
    };

    return RedditQuery;

  })();

  RedditSubreddit = (function(_super) {

    __extends(RedditSubreddit, _super);

    function RedditSubreddit(subreddit) {
      this.subreddit = subreddit;
    }

    RedditSubreddit.prototype.load = function(callback, after) {
      var data, endpoint;
      endpoint = "http://www.reddit.com/r/" + this.subreddit + "/hot.json";
      data = {};
      if (after != null) {
        data.after = after;
      }
      return this.queryEndpoint(endpoint, data, callback);
    };

    return RedditSubreddit;

  })(RedditQuery);

  RedditSearch = (function(_super) {

    __extends(RedditSearch, _super);

    function RedditSearch(query) {
      this.query = query;
    }

    RedditSearch.prototype.load = function(callback, after) {
      var data, endpoint;
      endpoint = "http://www.reddit.com/search.json";
      data = {
        q: this.query
      };
      if (after != null) {
        data.after = after;
      }
      return this.queryEndpoint(endpoint, data, callback);
    };

    return RedditSearch;

  })(RedditQuery);

  window.RedditQuery = RedditQuery;

  window.RedditSubreddit = RedditSubreddit;

  window.RedditSearch = RedditSearch;

}).call(this);
